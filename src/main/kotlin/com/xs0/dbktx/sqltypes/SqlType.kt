package com.xs0.dbktx.sqltypes

import com.xs0.dbktx.util.Sql
import kotlin.reflect.KClass

abstract class SqlType<T : Any> protected constructor(val isNotNull: Boolean, val isAutoGenerated: Boolean = false) {
    /**
     * Returns whether the value is logically null. Default implementation returns true only for
     * the actual SQL null, but in some cases, a 0 or something similar represents the same.
     */
    open fun isNullJsonValue(value: Any?): Boolean {
        return value == null
    }
    abstract fun fromJson(value: Any): T
    abstract fun toJson(value: T): Any

    internal abstract val dummyValue: T
    abstract val kotlinType: KClass<T>

    abstract fun toSql(value: T, sql: Sql)
    open fun toSqlNull(sql: Sql) {
        sql.
    }
}

